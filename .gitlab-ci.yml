stages:
  - vet
  - test
  - build
  - pages

.vet-tools: &vet-tools
  image: grauwoelfchen/rust-vet-tools:nightly
  except:
    - tags

check:
  stage: vet
  <<: *vet-tools
  before_script:
    - rustc --version
    - cargo --version
    - mkdir -p .git/hooks
  script:
    - make vet:check

fmt:
  stage: vet
  <<: *vet-tools
  before_script:
    - rustc --version
    - cargo --version
    - cargo fmt --version
    - mkdir -p .git/hooks
  script:
    - make vet:format

lint:
  stage: vet
  <<: *vet-tools
  before_script:
    - rustc --version
    - cargo --version
    - cargo clippy --version
    - mkdir -p .git/hooks
  script:
    - make vet:lint

test:doc:
  stage: test
  <<: *vet-tools
  before_script:
    - rustc --version
    - cargo --version
    - mkdir -p .git/hooks
  script:
    - make test:doc
  only:
    - trunk
    - merge_requests

test:unit:
  stage: test
  <<: *vet-tools
  before_script:
    - rustc --version
    - cargo --version
    - mkdir -p .git/hooks
  script:
    - make test:unit
  only:
    - trunk
    - merge_requests

test:integration:
  stage: test
  <<: *vet-tools
  before_script:
    - rustc --version
    - cargo --version
    - mkdir -p .git/hooks
  script:
    - make test:integration
  only:
    - trunk
    - merge_requests

coverage:
  stage: test
  <<: *vet-tools
  before_script:
    - rustc --version
    - cargo --version
    - kcov --version
    - mkdir -p .git/hooks
  script:
    - make coverage
  needs:
    - test:doc
    - test:unit
    - test:integration
  after_script:
    - cat target/coverage/lib/index.js
  coverage: /^\d+.\d+\%/
  artifacts:
    name: ${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}
    expire_in: 3 days
    reports:
      coverage_report:
        coverage_format: cobertura
        path: target/coverage/lib/lithe-*.*/cobertura.xml
  only:
    - trunk
    - merge_requests

build:nightly:
  stage: build
  image: grauwoelfchen/rust:nightly
  before_script:
    - rustc --version
    - cargo --version
    - mkdir -p .git/hooks
  script:
    - make build:debug
  cache:
    untracked: true
  only:
    - trunk
    - merge_requests

build:stable:
  stage: build
  image: grauwoelfchen/rust:stable
  before_script:
    - rustc --version
    - cargo --version
    - mkdir -p .git/hooks
  script:
    - make build:debug
  cache:
    untracked: true
  only:
    - trunk
    - merge_requests

build:nightly:release:
  stage: build
  image: grauwoelfchen/rust:nightly
  before_script:
    - rustc --version
    - cargo --version
    - mkdir -p .git/hooks
  script:
    - make build:release
  cache:
    untracked: true
  only:
    - trunk

build:stable:release:
  stage: build
  image: grauwoelfchen/rust:stable
  before_script:
    - rustc --version
    - cargo --version
    - mkdir -p .git/hooks
  script:
    - make build:release
  cache:
    untracked: true
  only:
    - trunk

pages:
  stage: pages
  image: grauwoelfchen/rust:stable
  before_script:
    - rustc --version
    - rustdoc --version
    - cargo --version
  script:
    - make doc
    - echo "<meta http-equiv=\"refresh\" content=\"0; url=lithe\">" \
        > ./target/doc/index.html
    - mkdir pubilc
    - cp -R target/doc/* public/
  artifacts:
    untracked: true
    paths:
      - public
  only:
    - tags
    - trunk
